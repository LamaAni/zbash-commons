#!/bin/bash
type curl >&2
if [ $? -ne 0 ]; then
  echo "Curl must be installed"
fi

function assert() {
  local code="$1"
  shift
  if [ "$code" -ne 0 ]; then
    echo "ERROR: " "$@"
  fi
  return "$code"
}

HELP="
Installs the zbash-commons library
USAGE: Install [branch]
ARGS:
  -l --location   The install location (default: /lib/zbash-commons)
"

while [ "$#" -gt 0 ]; do
  case $1 in
  -h | --help)
    echo "$HELP"
    exit 0
    ;;
  -l | --location)
    shift
    ZBASH_COMMONS_INSTALL_LOCATION="$1"
    ;;
  -*)
    assert 2 "Invalid argument: $1"
    ;;
  *)
    if [ -z "$ZBASH_COMMONS_VERSION" ]; then
      ZBASH_COMMONS_VERSION="$1"
    else
      assert 2 "Unknown input: $1"
    fi
    ;;
  esac
  shift
done

: "${ZBASH_COMMONS_VERSION:="latest"}"
: "${ZBASH_COMMONS_SOURCE_COMMAND_LOCATION:="/usr/bin/zbash_commons"}"

# ------------------

ZBASH_COMMONS_TEMP_PATH="$(mktemp /tmp/zbash-commpns-script-XXXX.sh)"

function install() {
  URL_BRANCH="$ZBASH_COMMONS_VERSION"
  if [ "$URL_BRANCH" == "latest" ]; then
    URL_BRANCH="master"
  fi
  GET_SCRIPT_URL="https://raw.githubusercontent.com/LamaAni/zbash-commons/$URL_BRANCH/get?v_$(date +"%S")=$RANDOM"
  echo "$GET_SCRIPT_URL"
  curl -sL "$GET_SCRIPT_URL" | bash -s "$ZBASH_COMMONS_VERSION" >"$ZBASH_COMMONS_TEMP_PATH"
  assert $? "Failed to download zbash_commons compiled script" || return $?

  source "$ZBASH_COMMONS_TEMP_PATH"
  assert $? "Failed to load zbash_commons script, error in script?" || return $?

  log:sep "Installing zbash-commons as $(whoami)"
  log "Checking required premissions"
  if [ "$(whoami)" != "root" ]; then
    log "checking if sudo is available..."
    type sudo >/dev/null 2>&1
    if [ $? -ne 0 ]; then
      warn 2 "Sudo not found. Attempting to install with user $(whoami)"
    else
      assert 2 "Sudo found, please rerun as root" || return $?
    fi
  fi

  if [ -f "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" ]; then
    rm -rf "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION"
    assert $? "Failed to remove old code" || return $?
  fi

  log "Downloading.."

  cat "$ZBASH_COMMONS_TEMP_PATH" >"$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" && chmod +x "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION"
  log "Installed OK -> $ZBASH_COMMONS_SOURCE_COMMAND_LOCATION ($(wc -l $ZBASH_COMMONS_SOURCE_COMMAND_LOCATION) lines)"
}

function cleanup() {
  local code=$?
  # rm -rf "$GET_SCRIPT_TEMP_PATH"
  # rm -rf "$ZBASH_COMMONS_TEMP_PATH"
  assert "$@" || return $?
}

install
cleanup $? "Failed to install" || exit $?

echo '

Library installed. To use, add the following at the head of your script,

#!/bin/bash
source zbash_commons
if [ $? -ne 0 ]; then
  echo "zbash_commons not found. Please see: https://github.com/LamaAni/zbash-commons"
fi

'

# type realapth >/dev/null 2>&1
# if [ $? -eq 0 ]; then
#   ZBASH_COMMONS_INSTALL_LOCATION="$(realpath "$ZBASH_COMMONS_INSTALL_LOCATION")"
# fi
# case "$ZBASH_COMMONS_INSTALL_LOCATION" in
# /*) ;;
# *)
#   assert 2 "$ZBASH_COMMONS_INSTALL_LOCATION must be an absolute path (starts with /)" $
#   ;;
# esac

# type git >/dev/null 2>&1
# assert $? "Git must be installed" || exit $?

# log "Cloning the remote repo"
# REPO_URI="https://github.com/LamaAni/zbash-commons.git"

# if [ -d "$ZBASH_COMMONS_INSTALL_LOCATION" ]; then
#   log "Removing old install"
#   rm -rf "$ZBASH_COMMONS_INSTALL_LOCATION"
#   assert $? "Failed to remove old install @ $ZBASH_COMMONS_INSTALL_LOCATION" || exit $?
# fi

# git clone --single-branch -b "$ZBASH_COMMONS_VERSION" "$REPO_URI" "$ZBASH_COMMONS_INSTALL_LOCATION"
# assert $? "Failed to clone $REPO_URI $ZBASH_COMMONS_VERSION into $ZBASH_COMMONS_INSTALL_LOCATION" || exit $?

# log "Creating the bin command @ $ZBASH_COMMONS_SOURCE_COMMAND_LOCATION"
# if [ -f "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" ]; then
#   rm -rf "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION"
#   assert $? "Failed to remove old $ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" || exit $?
# fi
# echo "#!/bin/bash
# source $ZBASH_COMMONS_INSTALL_LOCATION/src/load || exit \$?
# " >"$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" && chmod +x "$ZBASH_COMMONS_SOURCE_COMMAND_LOCATION"
# assert $? "Failed to create $ZBASH_COMMONS_SOURCE_COMMAND_LOCATION" || exit $?

# echo '

# Library installed. To use, add the following at the head of your script,

# #!/bin/bash
# source zbash_commons
# if [ $? -ne 0 ]; then
#   echo "zbash_commons not found. Please see: https://github.com/LamaAni/zbash-commons"
# fi

# '
